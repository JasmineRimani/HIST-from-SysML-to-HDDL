(define (domain satellite_check) 
	 (:requirements :typing :equality :hierarchy :method-preconditions :negative-preconditions) 
	 (:types  direction mode satellite instrument ) 

	 (:predicates 
		 (calibrated ?arg0-instrument) 
		 (on_board ?arg0-instrument ?arg1-satellite) 
		 (supports ?arg0-instrument ?arg1-mode) 
		 (power_on ?arg0-instrument) 
		 (pointing ?arg0-satellite ?arg1-direction) 
		 (have_image ?arg0-direction ?arg1-mode) 
		 (power_avail ?arg0-satellite) 
		 (calibration_target ?arg0-instrument ?arg1-direction) 
	) 

	 (:task DoMission 
		 :parameters (?direction-direction ?mode-mode) 
		 :precondition ()
		 :effect ()
	 ) 

	 (:task PrepareMission 
		 :parameters (?direction-direction ?satellite-satellite ?instrument-instrument) 
		 :precondition ()
		 :effect ()
	 ) 

	 (:task DoSwitching 
		 :parameters (?satellite-satellite ?instrument-instrument) 
		 :precondition ()
		 :effect ()
	 ) 

	 (:task DoCalibration 
		 :parameters (?satellite-satellite ?direction-direction ?instrument-instrument) 
		 :precondition ()
		 :effect ()
	 ) 

	 (:task MakePowerAvailable 
		 :parameters (?instrument_2-instrument ?satellite-satellite) 
		 :precondition ()
		 :effect ()
	 ) 

	 (:task DoTurning 
		 :parameters (?direction-direction ?satellite-satellite) 
		 :precondition ()
		 :effect ()
	 ) 


	 (:method DoMission_method1 
		 :parameters (?direction-direction ?mode-mode ?satellite-satellite ?instrument-instrument) 
		 :task (DoMission ?direction ?mode) 
		 :precondition (and 
			 
		) 
		 :subtasks (and 
			task0(PrepareMission ?direction ?satellite ?instrument)
			task1(TakeImage ?direction ?mode ?satellite ?instrument)
		 ) 
		 :ordering (and 
			(< task0 task1)
		 ) 
	 ) 

	 (:method PrepareMission_method1 
		 :parameters (?direction-direction ?satellite-satellite ?instrument-instrument) 
		 :task (PrepareMission ?direction ?satellite ?instrument) 
		 :precondition (and 
			 
		) 
		 :subtasks (and 
			task0(DoSwitching ?satellite ?instrument)
			task1(DoTurning ?direction ?satellite)
		 ) 
		 :ordering (and 
			(< task0 task1)
		 ) 
	 ) 

	 (:method DoSwitching_method1 
		 :parameters (?direction-direction ?satellite-satellite ?instrument-instrument ?instrument_2-instrument) 
		 :task (DoSwitching ?satellite ?instrument) 
		 :precondition (and 
			(on_board ?instrument_2 ?satellite)  
		) 
		 :subtasks (and 
			task0(MakePowerAvailable ?instrument_2 ?satellite)
			task1(SwitchOn ?instrument ?satellite)
			task2(DoCalibration ?satellite ?direction ?instrument)
		 ) 
		 :ordering (and 
			(< task0 task1) 
			(< task1 task2)
		 ) 
	 ) 

	 (:method DoSwitching_method2 
		 :parameters (?direction-direction ?satellite-satellite ?instrument-instrument) 
		 :task (DoSwitching ?satellite ?instrument) 
		 :precondition (and 
			 
		) 
		 :subtasks (and 
			task0(SwitchOn ?instrument ?satellite)
			task1(DoCalibration ?direction ?satellite ?instrument)
		 ) 
		 :ordering (and 
			(< task0 task1)
		 ) 
	 ) 

	 (:method DoSwitching_method3 
		 :parameters (?satellite-satellite ?satellite-satellite ?instrument-instrument ?instrument-instrument) 
		 :task (DoSwitching ?satellite ?instrument) 
		 :precondition (and 
			(power_on ?instrument) 
		) 
		 :subtasks (and 
			 task0(Nop)
		 ) 
	 ) 

	 (:method DoCalibration_method1 
		 :parameters (?direction-direction ?satellite-satellite ?instrument-instrument) 
		 :task (DoCalibration ?satellite ?direction ?instrument) 
		 :precondition (and 
			(not(calibrated ?instrument)) 
		) 
		 :subtasks (and 
			task0(PrepareMission ?satellite ?instrument ?direction)
			task1(Calibrate ?direction ?satellite ?instrument)
		 ) 
		 :ordering (and 
			(< task0 task1)
		 ) 
	 ) 

	 (:method DoCalibration_method2 
		 :parameters (?direction-direction ?direction-direction ?satellite-satellite ?satellite-satellite ?instrument-instrument ?instrument-instrument) 
		 :task (DoCalibration ?satellite ?direction ?instrument) 
		 :precondition (and 
			(calibrated ?instrument) 
		) 
		 :subtasks (and 
			 task0(Nop)
		 ) 
	 ) 

	 (:method MakePowerAvailable_method1 
		 :parameters (?satellite-satellite ?instrument_2-instrument) 
		 :task (MakePowerAvailable ?instrument_2 ?satellite) 
		 :precondition (and 
			(not(power_avail ?satellite)) 
		) 
		 :subtasks (and 
			 task0(SwitchOff ?satellite ?instrument_2)
		 ) 
	 ) 

	 (:method DoTurning_method1 
		 :parameters (?direction-direction ?satellite-satellite ?other_direction-direction) 
		 :task (DoTurning ?direction ?satellite) 
		 :precondition (and 
			(not(pointing ?satellite ?direction)) 
		) 
		 :subtasks (and 
			 task0(TurnTo ?direction ?satellite ?other_direction)
		 ) 
	 ) 

	 (:method DoTurning_method2 
		 :parameters (?direction-direction ?direction-direction ?satellite-satellite ?satellite-satellite) 
		 :task (DoTurning ?direction ?satellite) 
		 :precondition (and 
			(pointing ?satellite ?direction) 
		) 
		 :subtasks (and 
			 task0(Nop)
		 ) 
	 ) 


	(:action TakeImage 
		 :parameters (?direction-direction ?mode-mode ?satellite-satellite ?instrument-instrument) 
		 :precondition (and 
			(calibrated ?instrument) 
			(on_board ?instrument ?satellite) 
			(supports ?instrument ?mode) 
			(power_on ?instrument) 
			(pointing ?satellite ?direction))
		 :effect (and 
			(have_image ?direction ?mode))
	) 

	(:action SwitchOn 
		 :parameters (?instrument-instrument ?satellite-satellite) 
		 :precondition (and 
			(on_board ?instrument ?satellite))
		 :effect (and 
			(power_on ?instrument) 
			(not (calibrated ?instrument)) 
			(not (power_avail ?satellite)))
	) 

	(:action Nop 
		 :parameters () 
		 :precondition ()
		 :effect ()
	) 

	(:action Calibrate 
		 :parameters (?direction-direction ?satellite-satellite ?instrument-instrument) 
		 :precondition (and 
			(on_board ?instrument ?satellite) 
			(calibration_target ?instrument ?direction) 
			(power_on ?instrument) 
			(pointing ?satellite ?direction))
		 :effect (and 
			 (calibrated ?instrument))
	) 

	(:action SwitchOff 
		 :parameters (?satellite-satellite ?instrument_2-instrument) 
		 :precondition (and 
			(power_on ?instrument_2) 
			(on_board ?instrument_2 ?satellite))
		 :effect (and 
			 (not (power_on ?instrument_2)) 
			(power_avail ?satellite))
	) 

	(:action TurnTo 
		 :parameters (?direction-direction ?satellite-satellite ?other_direction-direction) 
		 :precondition (and 
			(pointing ?satellite ?other_direction) 
			 (not (= ?direction ?other_direction)))
		 :effect (and 
			(not (pointing ?satellite ?other_direction)) 
			(pointing ?satellite ?direction))
	) 

)